@using System.Data
@using DBTest
@model DBTest.DatabaseComparer

@{
    var FirstToSecond = @Model.ComparingResult[1];
    var SecondToFirst = @Model.ComparingResult[2];

    var FirstToSecond_unique = @Model.ComparingResult[3];
    var SecondToFirst_unique = @Model.ComparingResult[4];
}

<div class="container">
    <h3 class="text-center">Comparing results</h3>
    <ul class="nav nav-tabs">
        <li class="active"><a data-toggle="tab" href="#home">First table difference</a></li>
        <li><a data-toggle="tab" href="#menu1">Two table difference</a></li>
        <li><a data-toggle="tab" href="#menu2">Second table difference</a></li>
    </ul>

    <div class="tab-content">
        <div id="home" class="tab-pane fade in active">
            <table class="table table-condensed">
                <thead>
                    <tr>
                        <th class="text-center"><input type="checkbox" id="checkAllFirstDatabase" checked /><span id="checkAllFirstDatabaseText">Uncheck all</span></th>
                        @for (int i = 0; i < @Model.FirstDatabase.SelectedColumns.Count; i++)
                        {
                            <th>  @Model.FirstDatabase.SelectedColumns[i].Name  </th>
                        }
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < FirstToSecond.Count; i++)
                    {
                        List<string> temp = FirstToSecond[i].ToList();
                        <tr>
                            <td class="warning text-center"> <input type="checkbox" name="FirstDatabaseCheckbox" checked value="@i"></td>
                            @for (int j = 0; j < temp.Count; j++)
                            {
                                <td class="success">
                                    @temp[j]
                                </td>
                            }
                        </tr>
                    }
                    @for (int i = 0; i < FirstToSecond_unique.Count; i++)
                    {
                        List<string> temp = FirstToSecond_unique[i].ToList();
                        <tr>
                            <td class="warning text-center"> <input type="checkbox" name="FirstDatabaseCheckboxUnique" checked value="@i"></td>
                            @for (int j = 0; j < temp.Count; j++)
                            {
                                <td class="danger">
                                    @temp[j]
                                </td>
                            }
                        </tr>
                    }

                </tbody>
            </table>
            <div class="container-fluid">
                <div class="panel-group">
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <h4 class="panel-title">
                                <a data-toggle="collapse" href="#collapse1">Generate script for update database</a>
                            </h4>
                        </div>
                        <div id="collapse1" class="panel-collapse collapse">
                            <div class="panel-body">
                                <pre>
                                    <code readonly class="language-sql" id="Res1">
                                    </code>
                                </pre>
                                @*  <textarea readonly class="form-control disabled" rows="3" id="Res1"></textarea>*@
                                <hr />
                                <button id="1" class="btn-block btn-default btn-primary-custom ColapsableScript">Start update</button>
                            </div>
                            <div class="panel-footer">
                                link for download db <a href="#">Updated DB</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div id="menu1" class="tab-pane fade">
            <table class="table table-condensed">
                <thead>
                    <tr>
                        <th class="text-center"><input type="checkbox" id="checkAllFromTwo" checked /><span id="checkAllFromTwoText">Uncheck all</span></th>

                        @for (int i = 0; i < @Model.FirstDatabase.SelectedColumns.Count; i++)
                        {
                            <th>  @Model.FirstDatabase.SelectedColumns[i].Name  </th>
                            <th>  @Model.SecondDatabase.SelectedColumns[i].Name  </th>
                        }
                    </tr>
                </thead>
                <tbody>
                    @{
                        int maxRange = Math.Max(SecondToFirst.Count, FirstToSecond.Count);
                    }
                    @for (int i = 0; i < maxRange; i++)
                    {
                        List<string> error = new List<string>() { "none", "none" };

                        List<string> temp = i > FirstToSecond.Count ? temp = error : temp = FirstToSecond[i].ToList();
                        List<string> temp2 = i > SecondToFirst.Count ? temp2 = error : temp2 = SecondToFirst[i].ToList();

                        int columnNumber = Math.Max(temp.Count, temp2.Count);
                        <tr>
                            <td class="warning text-center"> <input type="checkbox" name="FromTwoDatabaseCheckbox" checked value="@i"></td>

                            @for (int j = 0; j < columnNumber; j++)
                            {
                                <td class="warning">
                                    @temp[j]
                                </td>
                                <td class="danger">
                                    @temp2[j]
                                </td>
                            }
                        </tr>

                    }
                </tbody>
            </table>
            <div class="container-fluid">
                <div class="panel-group">
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <h4 class="panel-title">
                                <a data-toggle="collapse" href="#collapse3">Generate script for update database</a>
                            </h4>
                        </div>
                        <div id="collapse3" class="panel-collapse collapse">
                            <div class="panel-body">
                                <pre>
                                <code readonly class="language-sql" id="Res2">
                                    </code>
                                </pre>                                <hr />
                                <button id="2" class="btn-block btn-default btn-primary-custom ColapsableScript">Start update</button>
                            </div>
                            <div class="panel-footer">
                                link for download db <a href="#">Updated DB</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div id="menu2" class="tab-pane fade">
            <table class="table table-condensed">
                <thead>
                    <tr>
                        <th class="text-center"><input type="checkbox" id="checkAllSecondDatabase" checked /><span id="checkAllSecondDatabaseText">Uncheck all</span></th>
                        @for (int i = 0; i < @Model.SecondDatabase.SelectedColumns.Count; i++)
                        {
                            <th>  @Model.SecondDatabase.SelectedColumns[i].Name  </th>
                        }
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < SecondToFirst.Count; i++)
                    {
                        List<string> temp = SecondToFirst[i].ToList();
                        <tr>
                            <td class="warning text-center"> <input type="checkbox" name="SecondDatabaseCheckbox" checked value="@i"></td>

                            @for (int j = 0; j < temp.Count; j++)
                            {
                                <td class="success">
                                    @temp[j]
                                </td>
                            }

                        </tr>
                    }

                    @for (int i = 0; i < SecondToFirst_unique.Count; i++)
                    {
                        List<string> temp = SecondToFirst_unique[i].ToList();
                        <tr>
                            <td class="warning text-center"> <input type="checkbox" name="SecondDatabaseCheckboxUnique" checked value="@i"></td>
                            @for (int j = 0; j < temp.Count; j++)
                            {
                                <td class="success">
                                    @temp[j]
                                </td>
                            }
                        </tr>
                    }
                </tbody>
            </table>
            <div class="container-fluid">
                <div class="panel-group">
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <h4 class="panel-title">
                                <a data-toggle="collapse" href="#collapse2">Generate script for update database</a>
                            </h4>
                        </div>
                        <div id="collapse2" class="panel-collapse collapse">
                            <div class="panel-body">
                                <pre>
                                <code readonly class="language-sql" id="Res3">
                                    </code>
                                </pre>                                <hr />
                                <button id="3" class="btn-block btn-default btn-primary-custom ColapsableScript">Start update</button>
                            </div>
                            <div class="panel-footer">
                                link for download db <a href="#">Updated DB</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<button type="button" class="btn-lg btn-block btn-default-custom" id="Back" style="margin-bottom:1.5vmin;">STEP BACK</button>

<script type="text/javascript">
    $(function () {
        var buttons = $(".ColapsableScript").toArray();
        buttons.forEach(function (item, i) {
            $(item).click(function () {
                waitingDialog.show();
                var id = this.id;
                var arrayN = null;
                var arrayU = null;
                switch (id) {
                    case "1":
                        {
                            arrayN = ValueCheckbox("FirstDatabaseCheckbox");
                            arrayU = ValueCheckbox("FirstDatabaseCheckboxUnique");
                            break;
                        };
                    case "2":
                        {
                            arrayN = ValueCheckbox("FromTwoDatabaseCheckbox");
                            arrayU = [];
                            break;
                        }
                    case "3":
                        {
                            arrayN = ValueCheckbox("SecondDatabaseCheckbox");
                            arrayU = ValueCheckbox("SecondDatabaseCheckboxUnique");
                            break;
                        };
                    default:
                        return;
                }
                $.ajax({
                    async: true,
                    url: "CreateScript",
                    type: "POST",
                    data: { id: id, arrayN: arrayN, arrayU: arrayU },
                    success: function (result) {
                        waitingDialog.hide();
                        var sql = result.insert + result.update;
                        document.getElementById("Res" + id).innerText = sql;
                        $.getScript("/js/prism.js", function (jqxhr) {
                            console.log(jqxhr.status); // 200
                        });
                    }
                });
            });
        });

        $("#Back").click(function () {
            waitingDialog.show();
            $.ajax({
                url: "ColumnMapping",
                type: "POST",
                success: function (result) {
                    waitingDialog.hide();
                    $("#Partial").html(result);
                }
            });
        });

        function ValueCheckbox(name) {
            var chkArray = [];
            $("input[name = '" + name + "']:checked").each(function () {
                chkArray.push($(this).val());
            });
            return chkArray;
        }

        $("#checkAllFirstDatabase").change(function () {
            $("input[name = 'FirstDatabaseCheckbox']").prop('checked', $(this).prop("checked"));
            $("input[name = 'FirstDatabaseCheckboxUnique']").prop('checked', $(this).prop("checked"));

            var checked = $("#checkAllFirstDatabase").is(':checked');
            (checked === true) ? $("#checkAllFirstDatabaseText").text('Uncheck all') : $("#checkAllFirstDatabaseText").text('Check all');
        });
        $("#checkAllSecondDatabase").change(function () {
            $("input[name = 'SecondDatabaseCheckbox']").prop('checked', $(this).prop("checked"));
            $("input[name = 'SecondDatabaseCheckboxUnique']").prop('checked', $(this).prop("checked"));

            var checked = $("#checkAllSecondDatabase").is(':checked');
            (checked === true) ? $("#checkAllSecondDatabaseText").text('Uncheck all') : $("#checkAllSecondDatabaseText").text('Check all');
        });

        $("#checkAllFromTwo").change(function () {
            $("input[name = 'FromTwoDatabaseCheckbox']").prop('checked', $(this).prop("checked"));

            var checked = $("#checkAllFromTwo").is(':)checked');
            (checked === true) ? $("#checkAllFromTwoText").text('Uncheck all') : $("#checkAllFromTwoText").text('Check all');
        });
    });

</script>


