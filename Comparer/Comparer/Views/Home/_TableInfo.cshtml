@using System.Data
@using DbComparer
@model DBTest.DatabaseComparer


<link rel="stylesheet" href="~/css/PartialViewCss/TableInfo.css" />

<h1>Check tables</h1>
<hr />
<div class="container-fluid">
    <div>
        <h2>@Model.FirstDatabase.FileName</h2>
        <button id="sortSource" class="btn-sm btn-default-custom">Sort by name</button>
    </div>
    <div class="row-fluid" id="container-table-info">

        <div class=" table-chooser panel panel-default panel-table">
            @{
                List<String> drcFirstDBNamesTB = Model.FirstDatabase.GetTablesList();
            }
            <div class="panel-body">

                <div class="tr" id="container-source">
                    @foreach (String nameTB in drcFirstDBNamesTB)
                    {
                        <div class="box-source td table-chooser-item">
                            <p class="TbName"> <strong> @nameTB </strong></p>
                            <br />
                            @{
                                Model.FirstDatabase.GetTableInfo(nameTB);
                                foreach (Database.Column typesTB in Model.FirstDatabase.TableColumns)
                                {
                                    <p class="TbType"> @typesTB.Name</p>
                                }
                            }
                            <input class="tableRadio" type="radio" name="FirstDatabaseCH" value=@nameTB checked="checked">
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <div>
        <h2>@Model.SecondDatabase.FileName</h2>
        <button id="sortTarget" class="btn-sm btn-default-custom">Sort by name</button>
    </div>

    <div class="row-fluid" id="container-table-info">

        <div class=" table-chooser panel panel-default panel-table">
            @{
                List<String> drcSecondDBNamesTB = Model.SecondDatabase.GetTablesList();
            }
            <div class="panel-body">

                <div class="tr" id="container-target">
                    @foreach (String nameTB in drcSecondDBNamesTB)
                    {
                        <div class="box-target td table-chooser-item">
                            <p class="TbName"> <strong> @nameTB </strong></p>
                            <br />
                            @{
                                Model.SecondDatabase.GetTableInfo(nameTB);
                                foreach (Database.Column typesTB in Model.SecondDatabase.TableColumns)
                                {
                                    <p class="TbType"> @typesTB.Name</p>
                                }
                            }
                            <input class="tableRadio" type="radio" name="SecondDatabaseCH" value=@nameTB checked="checked">
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <button type="button" class="btn-lg btn-block btn-primary-custom" id="GoToColumnMapping">Check Columns</button>
    <button type="button" class="btn-lg btn-block btn-default-custom" id="Back" style="margin-bottom:1.5vmin;">Step back</button>

</div>
<script>
    //function for choosing tables
    function tbChooser() {
        $('div.table-chooser').find('div.table-chooser-item').on('click', function () {
            $(this).parent().parent().find('div.table-chooser-item').removeClass('selected');
            $(this).addClass('selected');
            $(this).find('input[type="radio"]').prop("checked", true);
        });
    };
    tbChooser();
    //sort div function
    function sortDivs(source, boxClass, containerId, buttonId) { 
        $(buttonId).on('click', function () {
            var $divs = $(boxClass);
            var alphabeticallyOrderedDivs = $divs.sort(function (a, b) {

                if ($(a).find("p.TbName").text().trim().toLowerCase() < $(b).find("p.TbName").text().trim().toLowerCase()) {
                    return -1;
                } else if ($(a).find("p.TbName").text().trim().toLowerCase() > $(b).find("p.TbName").text().trim().toLowerCase()) {
                    return 1;
                } else {
                    return 0;
                }
            });
            ($(boxClass).text() == source.text()) ? ($(containerId).html(alphabeticallyOrderedDivs) && $(buttonId).html('Sort by name')) : ($(containerId).html(source) && $(buttonId).html('Sort by db position'));
            tbChooser();
        });
    }
    //variables for saving not sortable tables(like in db) 
    var $divsOriginSource = $("div.box-source");
    var $divsOriginTarget = $("div.box-target");
    //sorting
    sortDivs($divsOriginSource, "div.box-source", "#container-source", "#sortSource" );
    sortDivs($divsOriginTarget, "div.box-target", "#container-target", "#sortTarget");
   
    $("#GoToColumnMapping").click(function () {
        var array = [];
        array.push($('input[name=FirstDatabaseCH]:checked').val());
        array.push($('input[name=SecondDatabaseCH]:checked').val());

        console.log(array);
        waitingDialog.show();
        $.ajax({
            async: true,
            url: "ColumnMapping",
            type: "POST",
            data: { array: array },
            cache: false,
            success: function (result) {
                waitingDialog.hide();
                $("#Partial").html(result);
            }
        });
    });

    $("#Back").click(function () {
        waitingDialog.show();
        $.ajax({
            url: "FilesDownloaded",
            type: "POST",
            success: function (result) {
                waitingDialog.hide();
                $("#Partial").html(result);
            }
        });
    });
</script>

